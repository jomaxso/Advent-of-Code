name: Advent Calendar Door Opener - Daily from Dec 1 to Dec 25

on:
  schedule:
    - cron: '0 0 1-25 12 *'  # Runs every day from Dec 1 to Dec 25 at midnight
  workflow_dispatch: # Allows manual triggering of the workflow
    inputs:
      year:
        description: 'Year'
        required: true
      day:
        description: 'Day'
        required: true

jobs:
  create-advent-day:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set date variables
        id: set-date
        run: |
          if (-not ${{ github.event.inputs.year }}) {
            echo "year=$(Get-Date -Format yyyy)" >> $env:GITHUB_ENV
          } else {
            echo "year=${{ github.event.inputs.year }}" >> $env:GITHUB_ENV
          }
          
          echo "month=$(Get-Date -Format MM)" >> $env:GITHUB_ENV
          
          if (-not ${{ github.event.inputs.day }}) {
            echo "day=$(Get-Date -Format DD)" >> $env:GITHUB_ENV
          } else {
            echo "day=${{ github.event.inputs.day }}" >> $env:GITHUB_ENV
          }
        shell: pwsh

      - name: Check if Advent of Code has started
        if: github.event_name == 'schedule'
        run: |
          if ((Get-Date) -lt (Get-Date -Year ${{ env.year }} -Month 12 -Day 01) -or (Get-Date) -gt (Get-Date -Year ${{ env.year }} -Month 12 -Day 25))) { 
            Write-Host "Advent of Code ${{ env.year }} has not started yet. Please try again on December 1st." 
            exit 1 
          }
        shell: pwsh

      - name: Create the new Advent Day
        run: .\create-advent-day.ps1 ${{ env.year }} ${{ env.day }}
        shell: pwsh

      - name: Set up Git
        run: |
          $user = if ($env:USER) { $env:USER } else { 'github-actions' } 
          $email = if ($env:EMAIL) { $env:EMAIL } else { 'github-actions@github.com' }   
          git config --global user.name $user 
          git config --global user.email $email
        shell: pwsh
        env:
          USER: ${{ secrets.GIT_USER }}
          EMAIL: ${{ secrets.GIT_EMAIL }}
          
      - name: Create GitHub label 
        run: |
          gh label create "${{ env.year }}" --description "Label for Advent of Code Year ${{ env.year }}" --force
          gh label create "Advent of Code" --description "Label for Advent of Code issues" --force
        shell: pwsh 
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create branch for issue
        run: |
          $commitDate = Get-Date -Format "yyyy-MM-dd"
          $branchName = "day-${{ env.day }}-advent-of-code-${{ env.year }}"
          
          $issue_Title = "Advent of Code ${{ env.year }} - Day ${{ env.day }}"
          $issue_Label = "Advent of Code,${{ env.year }}"
          
          # Create issue for the day
          gh issue create --title $issue_Title --label $issue_Label --repo $env:GITHUB_REPOSITORY --assignee ${{ github.repository_owner }} --body "This issue tracks the solution for [Advent of Code ${{ env.year }} - Day ${{ env.day }}](https://adventofcode.com/${{ env.year }}/day/${{ env.day }})."
          
          # Get the issue number
          $issue_Number = gh search issues $issue_Title --label $issue_Label --repo $env:GITHUB_REPOSITORY --created $commitDate --json number | ConvertFrom-Json | Select-Object -ExpandProperty number
          
          git checkout -b $branchName
          git add .
          git commit -m "Automated commit for new Advent Day on $commitDate. See issue #$issue_Number."
          git push --set-upstream origin $branchName
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}